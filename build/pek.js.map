{"version":3,"file":"pek.js","mappings":"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","sources":["webpack://pekjs/webpack/universalModuleDefinition","webpack://pekjs/webpack/bootstrap","webpack://pekjs/webpack/runtime/define property getters","webpack://pekjs/webpack/runtime/hasOwnProperty shorthand","webpack://pekjs/webpack/runtime/make namespace object","webpack://pekjs/./node_modules/engine.io-parser/build/esm/commons.js","webpack://pekjs/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://pekjs/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://pekjs/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://pekjs/./node_modules/engine.io-parser/build/esm/index.js","webpack://pekjs/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/util.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/transport.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/socket.js","webpack://pekjs/./node_modules/engine.io-client/build/esm/index.js","webpack://pekjs/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://pekjs/./node_modules/socket.io-parser/build/esm/binary.js","webpack://pekjs/./node_modules/socket.io-parser/build/esm/index.js","webpack://pekjs/./node_modules/socket.io-client/build/esm/on.js","webpack://pekjs/./node_modules/socket.io-client/build/esm/socket.js","webpack://pekjs/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://pekjs/./node_modules/socket.io-client/build/esm/manager.js","webpack://pekjs/./node_modules/socket.io-client/build/esm/index.js","webpack://pekjs/./node_modules/socket.io-client/build/esm/url.js","webpack://pekjs/./src/client/network.js","webpack://pekjs/./src/error.js","webpack://pekjs/./src/client/error.js","webpack://pekjs/./src/client/dataset.js","webpack://pekjs/./node_modules/uuid/dist/esm-browser/rng.js","webpack://pekjs/./node_modules/uuid/dist/esm-browser/regex.js","webpack://pekjs/./node_modules/uuid/dist/esm-browser/validate.js","webpack://pekjs/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://pekjs/./node_modules/uuid/dist/esm-browser/v4.js","webpack://pekjs/./src/et.js","webpack://pekjs/./src/client/results.js","webpack://pekjs/./src/client/task.js","webpack://pekjs/./src/client/client.js","webpack://pekjs/./src/client/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pekjs\"] = factory();\n\telse\n\t\troot[\"pekjs\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { io } from 'socket.io-client'\n\n/**\n * Connecto to the server using SocketIO.\n * @param {*} url Url of the server.\n * @returns The socket object.\n */\nexport async function connect (url) {\n  const socket = new Promise((resolve, reject) => {\n    const s = io(url)\n    s.on('connect', () => {\n      console.log(`[PekClient] Connected to PekServer at ${url}`)\n      resolve(s)\n    })\n  })\n  return socket\n}\n\n/**\n * Send an event to the server.\n * @param {*} socket Socket object.\n * @param {*} event Event name to send.\n * @param {*} payload Associated with the event.\n * @returns The response object.\n */\nexport async function send (socket, event, payload = null) {\n  if (typeof payload !== 'string') {\n    // If not, convert it to a string using JSON.stringify()\n    payload = JSON.stringify(payload)\n  }\n  // console.log('Sending', event, payload)\n  return new Promise((resolve, reject) => {\n    socket.emit(event, payload, (response) => {\n      resolve(response)\n    })\n  })\n}\n","export default class PekError extends Error {\n  constructor (msg) {\n    super(msg)\n  }\n}\n","import PekError from '../error'\n\nexport class PekClientError extends PekError {\n  constructor (msg) {\n    super(msg)\n  }\n}\n\nexport class PekDatasetError extends PekError {\n  constructor (msg) {\n    super(msg)\n  }\n}\n\nexport class PekTaskError extends PekError {\n  constructor (msg) {\n    super(msg)\n  }\n}\n","/**\n * Represents a PekDataset instance that interacts with a PekClient to retrieve dataset information.\n */\nimport { PekDatasetError } from './error'\n\nexport default class PekDataset {\n  /**\n   * @private {PekClient} #client - Private field to store the PekClient instance.\n   * @private {Object} _data - Private field to cache retrieved data.\n   * @param {string} name - The name of the dataset.\n   * @param {PekClient} client - An instance of PekClient to interact with the server.\n   */\n  #client = null\n\n  constructor (name, client) {\n    this.#client = client\n    this.name = name\n    this._data = {}\n  }\n\n  /**\n   * Retrieves data for the specified key from the dataset.\n   * @param {string} key - The key for the data to retrieve. Allowed keys are: 'features', 'original', 'scaled', 'isomap', 'mds', 'pca', 'tsne', 'umap'.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved data.\n   * @throws {PekDatasetError} - Throws an error if an invalid key is provided.\n   */\n  async get (key) {\n    const availableKeys = ['features', 'original', 'scaled', 'isomap', 'mds', 'pca', 'tsne', 'umap']\n    if (!availableKeys.includes(key)) {\n      throw new PekDatasetError(`Invalid key='${key}'. Must be in ${availableKeys}.`)\n    }\n    if (this._data[key] === undefined) {\n      const payload = { name: this.name }\n      payload[key] = true\n\n      const response = await this.#client._send('dataset', payload)\n      this._data[key] = response[key]\n    }\n    return this._data[key]\n  }\n\n  /**\n   * Shortcut method to retrieve features data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved features data.\n   */\n  async getFeatures () {\n    return this.get('features')\n  }\n\n  /**\n   * Shortcut method to retrieve original data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved original data.\n   */\n  async getOriginalData () {\n    return this.get('original')\n  }\n\n  /**\n   * Shortcut method to retrieve scaled data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved scaled data.\n   */\n  async getScaledData () {\n    return this.get('scaled')\n  }\n\n  /**\n   * Shortcut method to retrieve ISOMAP data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved ISOMAP data.\n   */\n  async getISOMAP () {\n    return this.get('isomap')\n  }\n\n  /**\n   * Shortcut method to retrieve MDS data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved MDS data.\n   */\n  async getMDS () {\n    return this.get('mds')\n  }\n\n  /**\n   * Shortcut method to retrieve PCA data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved PCA data.\n   */\n  async getPCA () {\n    return this.get('pca')\n  }\n\n  /**\n   * Shortcut method to retrieve TSNE data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved TSNE data.\n   */\n  async getTSNE () {\n    return this.get('tsne')\n  }\n\n  /**\n   * Shortcut method to retrieve UMAP data.\n   * @returns {Promise<Object>} - A Promise that resolves with the retrieved UMAP data.\n   */\n  async getUMAP () {\n    return this.get('umap')\n  }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import PekError from './error'\n\nclass PekEarlyTerminationError extends PekError {\n  constructor (msg) {\n    super(msg)\n  }\n}\n\nclass EarlyTerminator {\n  constructor (name, threshold, action) {\n    this.name = name\n    this.threshold = threshold\n    this.action = action\n\n    const EARLY_TERMINATION_ACTIONS = ['notify', 'kill']\n    if (action !== null && !EARLY_TERMINATION_ACTIONS.includes(action)) {\n      throw new PekEarlyTerminationError(`Invalid action value: ${action}. Allowed values are [${EARLY_TERMINATION_ACTIONS.join(', ')}].`)\n    }\n  }\n}\n\nclass EarlyTerminatorNotifier extends EarlyTerminator {\n  constructor (name, threshold) {\n    super(name, threshold, 'notify')\n  }\n}\n\nclass EarlyTerminatorKiller extends EarlyTerminator {\n  constructor (name, threshold) {\n    super(name, threshold, 'kill')\n  }\n}\n\nconst DefaultEarlyTerminator = {\n  FAST_NOTIFY: new EarlyTerminatorNotifier('fast-notify', null),\n  SLOW_NOTIFY: new EarlyTerminatorNotifier('slow-notify', null),\n\n  FAST_KILL: new EarlyTerminatorKiller('fast-kill', null),\n  SLOW_KILL: new EarlyTerminatorKiller('slow-kill', null)\n}\n\nconst EarlyTermination = {\n  EarlyTerminator,\n  EarlyTerminatorNotifier,\n  EarlyTerminatorKiller,\n  DefaultEarlyTerminator,\n  PekEarlyTerminationError\n}\n\nexport default EarlyTermination\n","export default class EnsemblePartialResult {\n  constructor (d) {\n    this.info = new EnsemblePartialResultInfo(d.info)\n    this.earlyTermination = d.earlyTermination\n    this.metrics = new EnsemblePartialResultMetrics(d.metrics)\n    this.centroids = d.centroids\n    this.labels = d.labels\n    this.partitions = d.partitions\n    this.runsStatus = new EnsemblePartialResultRunsStatus(d.runsStatus)\n    this.taskId = d.taskId\n\n    Object.keys(d).forEach(k => {\n      if (this[k] !== undefined) return\n      this['_' + k] = d[k]\n    })\n  }\n}\nclass EnsemblePartialResultInfo {\n  constructor (d) {\n    this.id = d.id\n    this.iteration = d.iteration\n    this.seed = d.seed\n    this.last = d.last\n    this.completed = d.completed\n    this.cost = d.cost\n    this.bestRun = d.bestRun\n    this.inertia = d.inertia\n\n    Object.keys(d).forEach(k => {\n      if (this[k] !== undefined) return\n      this['_' + k] = d[k]\n    })\n  }\n}\n\nclass EnsemblePartialResultMetrics {\n  constructor (d) {\n    this.labelsValidationMetrics = d.labelsValidationMetrics\n    this.labelsComparisonMetrics = d.labelsComparisonMetrics\n    this.labelsProgressionMetrics = d.labelsProgressionMetrics\n    this.partitionsValidationMetrics = d.partitionsValidationMetrics\n    this.partitionsComparisonMetrics = d.partitionsComparisonMetrics\n    this.partitionsProgressionMetrics = d.partitionsProgressionMetrics\n\n    Object.keys(d).forEach(k => {\n      if (this[k] !== undefined) return\n      this['_' + k] = d[k]\n    })\n  }\n}\n\nclass EnsemblePartialResultRunsStatus {\n  constructor (d) {\n    this.runIteration = d.runIteration\n    this.runCompleted = d.runCompleted\n    this.runsKilled = d.runsKilled\n\n    Object.keys(d).forEach(k => {\n      if (this[k] !== undefined) return\n      this['_' + k] = d[k]\n    })\n  }\n}\n","import { v4 as uuidv4 } from 'uuid'\nimport { PekTaskError } from './error'\nimport EarlyTermination from '../et'\nimport EnsemblePartialResult from './results'\n\nconst PekTaskStatus = {\n  pending: 'pending',\n  running: 'running',\n  paused: 'paused',\n  killed: 'killed',\n  completed: 'completed'\n}\n\n/**\n * Represents a PekTask instance that interacts with a PekClient to manage task operations.\n * @typedef {Object} PekTask\n * @property {string} id - The ID of the task.\n * @property {string} dataset - The dataset associated with the task.\n * @property {PekClient} #client - Private field to store the PekClient instance.\n * @property {string} #status - Private field to store the current status of the task.\n * @property {Object} #args - Private field to store task arguments.\n * @property {Function} #onPartialResultCallback - Private field to store the partial result callback function.\n */\n/**\n * Represents a task in the Pek system.\n */\nexport default class PekTask {\n  #client = null\n  #status = null\n\n  #args = {\n    taskId: null,\n    data: null,\n    n_clusters: 2,\n    n_runs: 4,\n    init: 'k-means++',\n    max_iter: 300,\n    tol: 1e-4,\n    random_state: null,\n    freq: null,\n    ets: null,\n    labelsValidationMetrics: null,\n    labelsComparisonMetrics: null,\n    labelsProgressionMetrics: null,\n    partitionsValidationMetrics: null,\n    partitionsComparisonMetrics: null,\n    partitionsProgressionMetrics: null,\n    adjustCentroids: true,\n    adjustLabels: true,\n    returnPartitions: false\n  }\n\n  #onPartialResultCallback = () => {}\n\n  /**\n   * Creates an instance of PekTask.\n   * @param {string} id - The ID of the task.\n   * @param {string} dataset - The dataset associated with the task.\n   * @param {PekClient} client - An instance of PekClient to interact with the server.\n   */\n  constructor (client) {\n    this.id = uuidv4()\n    this.#client = client\n    this.#status = PekTaskStatus.pending\n    this.#args.taskId = this.id\n  }\n\n  notifyPartialResult (str) {\n    const safeStr = str.replace(/Infinity/g, 'null').replace(/-Infinity/g, 'null').replace(/NaN/g, 'null')\n    const d = JSON.parse(safeStr)\n    const pr = new EnsemblePartialResult(d)\n    this.#onPartialResultCallback(pr)\n  }\n\n  // Status control methods...\n\n  /**\n   * Retrieves the current status of the task.\n   * @returns {string} - The current status of the task.\n   */\n  get status () {\n    return this.#status\n  }\n\n  /**\n   * Starts the task.\n   * @throws {PekTaskError} - Throws an error if the task has already been started.\n   */\n  async start () {\n    if (this.status !== PekTaskStatus.pending) throw PekTaskError(`${this.constructor.name} ${this.id} has already been started.`)\n    await this.#client._send('start-task', { clientId: this.#client.id, taskId: this.id, args: this.#args })\n    this.#status = PekTaskStatus.running\n  }\n\n  /**\n   * Pauses the task.\n   * @throws {PekTaskError} - Throws an error if the task is not running.\n   */\n  async pause () {\n    if (this.status !== PekTaskStatus.running) throw PekTaskError(`${this.constructor.name} ${this.id} is not running.`)\n    await this.#client._send('pause-task', { clientId: this.#client.id, taskId: this.id })\n    this.#status = PekTaskStatus.paused\n  }\n\n  /**\n   * Resumes the task.\n   * @throws {PekTaskError} - Throws an error if the task is not paused.\n   */\n  async resume () {\n    if (this.status !== PekTaskStatus.paused) throw PekTaskError(`${this.constructor.name} ${this.id} is not paused.`)\n    await this.#client._send('resume-task', { clientId: this.#client.id, taskId: this.id })\n    this.#status = PekTaskStatus.running\n  }\n\n  /**\n   * Kills the task.\n   * @throws {PekTaskError} - Throws an error if the task is not running.\n   */\n  async kill () {\n    if (this.status !== PekTaskStatus.running) throw PekTaskError(`${this.constructor.name} ${this.id} is not running.`)\n    await this.#client._send('kill-task', { clientId: this.#client.id, taskId: this.id })\n    this.#status = PekTaskStatus.killed\n  }\n\n  /**\n   * Kills a run of the task.\n   * @throws {PekTaskError} - Throws an error if the task is not running.\n   */\n  async killRun (runId) {\n    if (this.status !== PekTaskStatus.running) throw PekTaskError(`${this.constructor.name} ${this.id} is not running.`)\n    await this.#client._send('kill-run', { clientId: this.#client.id, taskId: this.id, runId })\n  }\n\n  // Partial result listener method...\n\n  onPartialResult (callback) {\n    this.#onPartialResultCallback = callback\n    return this\n  }\n\n  // Args getter and setter methods...\n\n  get args () {\n    return this.#args\n  }\n\n  data (value) {\n    if (!arguments.length) return this.#args.data\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.data = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  n_clusters (value) {\n    if (!arguments.length) return this.#args.n_clusters\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.n_clusters = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  n_runs (value) {\n    if (!arguments.length) return this.#args.n_runs\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.n_runs = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  init (value) {\n    if (!arguments.length) return this.#args.init\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.init = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  max_iter (value) {\n    if (!arguments.length) return this.#args.max_iter\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.max_iter = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  tol (value) {\n    if (!arguments.length) return this.#args.tol\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.tol = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  random_state (value) {\n    if (!arguments.length) return this.#args.random_state\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.random_state = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  freq (value) {\n    if (!arguments.length) return this.#args.freq\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.freq = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  ets (value) {\n    if (!arguments.length) return this.#args.ets\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n\n    const v = (typeof (value) === 'function' ? value() : value)\n    if (v !== undefined && v !== null) {\n      if (!Array.isArray(v)) throw new PekTaskError('Invalid value for early termination. Must be an array of EarlyTermination instances.')\n      for (let i = 0; i < v.length; i++) {\n        if (v[i] instanceof EarlyTermination.EarlyTerminator) continue\n        else throw new PekTaskError('Invalid value for early termination. Must be an array of EarlyTermination instances.')\n      }\n      this.#args.ets = v\n    }\n    return this\n  }\n\n  labelsValidationMetrics (value) {\n    if (!arguments.length) return this.#args.labelsValidationMetrics\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.labelsValidationMetrics = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  labelsComparisonMetrics (value) {\n    if (!arguments.length) return this.#args.labelsComparisonMetrics\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.labelsComparisonMetrics = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  labelsProgressionMetrics (value) {\n    if (!arguments.length) return this.#args.labelsProgressionMetrics\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.labelsProgressionMetrics = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  partitionsValidationMetrics (value) {\n    if (!arguments.length) return this.#args.partitionsValidationMetrics\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.partitionsValidationMetrics = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  partitionsComparisonMetrics (value) {\n    if (!arguments.length) return this.#args.partitionsComparisonMetrics\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.partitionsComparisonMetrics = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  partitionsProgressionMetrics (value) {\n    if (!arguments.length) return this.#args.partitionsProgressionMetrics\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.partitionsProgressionMetrics = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  adjustCentroids (value) {\n    if (!arguments.length) return this.#args.adjustCentroids\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.adjustCentroids = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  adjustLabels (value) {\n    if (!arguments.length) return this.#args.adjustLabels\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.adjustLabels = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n\n  returnPartitions (value) {\n    if (!arguments.length) return this.#args.returnPartitions\n    if (this.#status !== PekTaskStatus.pending) throw new PekTaskError('Cannot set args while the task is not pending.')\n    this.#args.returnPartitions = (typeof (value) === 'function' ? value() : value)\n    return this\n  }\n}\n","import { connect, send } from './network'\nimport PekDataset from './dataset'\nimport PekTask from './task'\nimport { PekClientError } from './error'\n\nexport default async function PekClient (serverUrl) {\n  const _socket = await connect(serverUrl)\n  const _info = await send(_socket, 'info')\n\n  /* ***************************************************************** */\n\n  return (new class PekClient {\n    #id = null\n    #socket = null\n    #datasets = null\n\n    constructor (serverUrl, socket, info) {\n      this.#id = socket.id\n      this.#socket = socket\n\n      this.server = { url: serverUrl, version: info.data.serverVersion }\n\n      // create dataset objects\n      this.#datasets = new Map()\n      info.data.datasets.forEach(name => {\n        this.#datasets.set(name, new PekDataset(name, this))\n      })\n    }\n\n    get id () { return this.#id }\n\n    /**\n     * Returns the list of dataset names.\n     * @returns List od strings.\n     */\n    getDatasetNames () {\n      return [...this.#datasets.keys()]\n    }\n\n    /**\n     * Returns the dataset object.\n     * @param {*} name Name of the dataset.\n     * @returns A PekDataset instance.\n     */\n    getDataset (name) {\n      if (!this.#datasets.has(name)) throw new PekClientError(`The dataset with name='${name}' does not exist.`)\n      return this.#datasets.get(name)\n    }\n\n    async createTask () {\n      const task = new PekTask(this)\n\n      this.#socket.on(task.id, (str) => {\n        task.notifyPartialResult(str)\n      })\n\n      return task\n    }\n\n    async _send (event, payload = null) {\n      const response = await send(this.#socket, event, payload)\n      if (response.error) throw new PekClientError(response.errorMessage)\n      else {\n        try {\n          if (typeof response.data === 'string') {\n            return JSON.parse(response.data)\n          } else if (typeof response.data === 'object') {\n            return response.data\n          } else {\n            console.warn(response)\n            return response.data\n          }\n        } catch {\n          console.warn(response)\n          return response.data\n        }\n      }\n    }\n  }(serverUrl, _socket, _info))\n\n  /* ***************************************************************** */\n}\n","import PekClient from './client'\n\nexport default PekClient\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","window","Function","pick","attr","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","_regeneratorRuntime","t","r","a","iterator","asyncIterator","u","configurable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","reverse","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","_x","_connect","_callee","_context","console","log","_x2","_x3","_send","_callee2","_args2","_context2","response","PekError","_Error","_classCallCheck","_callSuper","_inherits","_wrapNativeSuper","PekClientError","_PekError","_createClass","PekDatasetError","_PekError2","PekTaskError","_PekError3","_defineProperties","target","props","descriptor","_toPropertyKey","toPrimitive","_toPrimitive","_classPrivateFieldInitSpec","privateMap","privateCollection","has","_checkPrivateRedeclaration","set","_assertClassBrand","getRandomValues","_client","WeakMap","PekDataset","Constructor","client","instance","_data","protoProps","_get","availableKeys","includes","_getFeatures","_getOriginalData","_callee3","_context3","_getScaledData","_callee4","_context4","_getISOMAP","_callee5","_context5","_getMDS","_callee6","_context6","_getPCA","_callee7","_context7","_getTSNE","_callee8","_context8","_getUMAP","_callee9","_context9","staticProps","rnds8","rng","crypto","msCrypto","uuid","byteToHex","arr","rnds","PekEarlyTerminationError","EarlyTerminator","action","EARLY_TERMINATION_ACTIONS","EarlyTerminatorNotifier","_EarlyTerminator","EarlyTerminatorKiller","_EarlyTerminator2","DefaultEarlyTerminator","FAST_NOTIFY","SLOW_NOTIFY","FAST_KILL","SLOW_KILL","EnsemblePartialResult","_this","EnsemblePartialResultInfo","earlyTermination","metrics","EnsemblePartialResultMetrics","centroids","labels","partitions","runsStatus","EnsemblePartialResultRunsStatus","taskId","_this2","iteration","last","completed","cost","bestRun","inertia","_this3","labelsValidationMetrics","labelsComparisonMetrics","labelsProgressionMetrics","partitionsValidationMetrics","partitionsComparisonMetrics","partitionsProgressionMetrics","_this4","runIteration","runCompleted","runsKilled","_classPrivateFieldGet","_classPrivateFieldSet","PekTaskStatus","_status","_args","_onPartialResultCallback","PekTask","n_clusters","n_runs","init","max_iter","tol","random_state","freq","ets","adjustCentroids","adjustLabels","returnPartitions","uuidv4","safeStr","pr","_start","clientId","_pause","_resume","_kill","_killRun","runId","EarlyTermination","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","minLen","_unsupportedIterableToArray","_nonIterableSpread","arr2","_PekClient","serverUrl","_id","_socket2","_datasets","_info","PekClient","server","version","serverVersion","Map","datasets","_createTask","task","notifyPartialResult","_send2","errorMessage","warn","t0"],"sourceRoot":""}